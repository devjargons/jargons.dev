---
import { getCollection } from "astro:content";
import { ALPHABETS } from "../../../../constants.js";
import BaseLayout from "../../../layouts/base.astro";
import Navbar from "../../../components/navbar.astro";
import Search from "../../../components/islands/search";

const { page } = Astro.props;
const params = Astro.params;

const dictionary = await getCollection("dictionary");

export const prerender = true;

export async function getStaticPaths({ paginate }) {
  const dictionary = await getCollection("dictionary");
  return ALPHABETS.flatMap(alpha => {
    const filteredWords = dictionary.filter(word => word.slug[0] === alpha);
    return paginate(filteredWords, {
      params: { alpha },
      // pageSize: 1
    });
  });
}
---

<BaseLayout 
  pageTitle={`Browse jargons.dev`}
  subtitle={`Words Starting With "${params.alpha.toUpperCase()}" (Page ${page.currentPage})`}
  class="min-h-screen flex flex-col"
>
  <Navbar>
    <Search triggerSize="sm" dictionary={dictionary} client:load />
  </Navbar>
  
  <main class="w-full max-w-screen-lg grow flex flex-col p-5 md:mt-10 mx-auto space-y-6">
    <!-- Page Title -->
    <h1 class="text-3xl md:text-5xl font-black">
      Browse: Letter { params.alpha.toUpperCase() }
    </h1>

    <!-- Words List -->
    <div>
      {page.data.length ? page.data.map(word => (
        <a href={`/browse/${word.slug}`}
          class="flex items-center md:text-lg justify-between no-underline w-full p-4 even:bg-gray-100 hover:bg-gray-100/50"
        >
          <span>{ word.data.title }</span>
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
            <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5"></path>
          </svg>
        </a>
      )) : (
        <div class="mt-10 space-y-6">
          <p>
            Looks like this alphabet is feeling a bit lonely! ðŸ¤” Why not be the first to add a word and give it some company?
          </p>  
          <section class="rounded-lg border shadow-sm">
            <div class="space-y-1.5 p-3 md:p-6 flex flex-col lg:flex-row lg:items-center justify-between gap-4">
              <div class="space-y-1">
                <h3 class="font-semibold tracking-tight text-2xl">Contribute Words</h3>
                <p class="text-sm">
                  You can contribute new words to the jargons.dev dictionary.
                </p>
              </div>
              <a
                class="flex items-center w-fit justify-center no-underline px-4 py-2 rounded-md border border-gray-200 bg-white hover:bg-gray-100 text-sm shadow-sm hover:shadow transition-colors"
                href="/editor/new"
              >
                <span>Start Now</span>
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width={1.5} stroke="currentColor" class="w-4 h-4">
                  <path stroke-linecap="round" stroke-linejoin="round" d="m4.5 19.5 15-15m0 0H8.25m11.25 0v11.25" />
                </svg> 
              </a>
            </div>
          </section>
        </div>
      )}
    </div>

    <!-- Pagination -->
    {(page.url.next || page.url.prev) ? (
      <div class="w-full flex !mt-auto">
        <div class="mx-auto flex items-center space-x-4">
          {page.url.prev ? ( 
            <a href={page.url.prev} class="bg-black text-white no-underline rounded py-1 px-2">Previous</a>
          ) : (
            <span class="bg-gray-100 text-gray-400 cursor-not-allowed no-underline rounded py-1 px-2">Previous</span>
          )}
  
          <span>
            Page { page.currentPage }
          </span>
  
          {page.url.next ? ( 
            <a href={page.url.next} class="bg-black text-white no-underline rounded py-1 px-2">Next</a>
          ) : (
            <span class="bg-gray-100 text-gray-400 cursor-not-allowed no-underline rounded py-1 px-2">Next</span>
          )}
        </div>
      </div>
    ) : null}
  </main>
</BaseLayout>